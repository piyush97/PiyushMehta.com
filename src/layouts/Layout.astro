---
import Navbar from '../components/Navbar.astro';
import '../styles/global.css';

export interface Props {
  title: string;
  description?: string;
}

const {
  title,
  description = 'Piyush Mehta - Software Engineer & Tech Speaker',
} = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <script>
      // Theme detection and setting
      const getThemePreference = () => {
        if (
          typeof localStorage !== 'undefined' &&
          localStorage.getItem('theme')
        ) {
          return localStorage.getItem('theme');
        }
        return window.matchMedia('(prefers-color-scheme: light)').matches
          ? 'light'
          : 'dark';
      };

      const isDark = getThemePreference() === 'dark';
      document.documentElement.classList[isDark ? 'remove' : 'add']('light');

      if (typeof localStorage !== 'undefined') {
        const theme = getThemePreference();
        if (theme) {
          localStorage.setItem('theme', theme);
        }
      }
    </script>
  </head>
  <body class="min-h-screen">
    <Navbar />
    <main>
      <slot />
    </main>

    <script>
      // Theme toggle functionality
      function toggleTheme() {
        const element = document.documentElement;
        element.classList.toggle('light');

        const isDark = !element.classList.contains('light');
        localStorage.setItem('theme', isDark ? 'dark' : 'light');
      }

      // Expose toggle function globally
      (window as any).toggleTheme = toggleTheme;
    </script>
  </body>
</html>
