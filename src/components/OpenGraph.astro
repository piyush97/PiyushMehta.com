---
import { getOGImageUrl } from '../utils/og-utils';

export interface Props {
  title?: string;
  description?: string;
  image?: string;
  url?: string;
  type?: string;
  author?: string;
  date?: Date;
  tags?: string[];
  pageType?: 'website' | 'article' | 'blog' | 'project' | 'video' | 'about' | 'contact' | 'uses' | 'resume';
}

const {
  title,
  description,
  image,
  url = Astro.url.href,
  type = 'website',
  author,
  date,
  tags,
  pageType,
} = Astro.props;

const pageTitle = title || 'Piyush Mehta';
const pageDescription =
  description || 'Software Engineer, Speaker, and Open Source Enthusiast';

// Generate dynamic OG image if no custom image is provided
const ogImageUrl = image || getOGImageUrl({
  title: pageTitle,
  description: pageDescription,
  type: pageType || (type === 'article' ? 'article' : 'website'),
  date: date?.toISOString(),
  tags: tags,
  author: author,
});
---

<!-- Open Graph / Facebook -->
<meta property="og:type" content={type} />
<meta property="og:url" content={url} />
<meta property="og:title" content={pageTitle} />
<meta property="og:description" content={pageDescription} />
<meta property="og:image" content={ogImageUrl} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={url} />
<meta property="twitter:title" content={pageTitle} />
<meta property="twitter:description" content={pageDescription} />
<meta property="twitter:image" content={ogImageUrl} />
